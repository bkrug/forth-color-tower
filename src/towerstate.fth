CREATE TOWER1 66 C, 71 C, 82 C, 32 C, 32 C,
CREATE TOWER2 71 C, 82 C, 66 C, 32 C, 32 C,
CREATE TOWER3 71 C, 66 C, 82 C, 32 C, 32 C,
VARIABLE HEIGHT1
VARIABLE HEIGHT2
VARIABLE HEIGHT3
3 HEIGHT1 !
3 HEIGHT2 !
3 HEIGHT3 !

VARIABLE SOURCE
VARIABLE DESTINATION

: ISINVALIDCOLPAIR ( n1 n2 -- n1 n2 )
  2DUP =
  OVER 1 < OR
  2 PICK 1 < OR
  OVER 3 > OR
  2 PICK 3 > OR
;

: ISTOWERFULL ( n1 -- )
  CASE
    1 OF HEIGHT1 ENDOF
    2 OF HEIGHT2 ENDOF
    3 OF HEIGHT3 ENDOF
  ENDCASE
  @ 4 >
;

: ISTOWEREMPTY ( n1 -- )
  CASE
    1 OF HEIGHT1 ENDOF
    2 OF HEIGHT2 ENDOF
    3 OF HEIGHT3 ENDOF
  ENDCASE
  @ 0 =
;

: MOVECOLOR ( n1 n2 -- )
  ( Validate )
  ISINVALIDCOLPAIR IF
    DROP DROP EXIT
  THEN
  2DUP ISTOWERFULL
  SWAP ISTOWEREMPTY OR IF
    DROP DROP EXIT
  THEN

  ( We will use the parameters twice )
  2DUP

  ( Calculate addresses to copy color-byte from and to )
  CASE
    1 OF HEIGHT1 @ TOWER1 ENDOF
    2 OF HEIGHT2 @ TOWER2 ENDOF
    3 OF HEIGHT3 @ TOWER3 ENDOF
  ENDCASE
  + DESTINATION ! 

  CASE
    1 OF HEIGHT1 @ TOWER1 ENDOF
    2 OF HEIGHT2 @ TOWER2 ENDOF
    3 OF HEIGHT3 @ TOWER3 ENDOF
  ENDCASE
  + 1 - SOURCE !

  ( Adjust heights of the effected towers )
  CASE
    1 OF 1 HEIGHT1 ENDOF
    2 OF 1 HEIGHT2 ENDOF
    3 OF 1 HEIGHT3 ENDOF
  ENDCASE
  +!

  CASE
    1 OF -1 HEIGHT1 ENDOF
    2 OF -1 HEIGHT2 ENDOF
    3 OF -1 HEIGHT3 ENDOF
  ENDCASE
  +!

  ( Move color byte )
  SOURCE @ C@ DESTINATION @ C!
  32 SOURCE @ C!
;

: MEMSHOW ( -- )
  DO
    CR I .
    I 8 + I DO
      I @ .
    2 +LOOP
  8 +LOOP
  CR
;

: ISTOWERCOMPLETE ( towerAddr -- bool )
  DUP C@
  OVER 1 + C@ =
  SWAP

  DUP 1 + C@
  OVER 2 + C@ =
  SWAP

  DUP 3 + C@ 32 =
  SWAP

  DUP 4 + C@ 32 =
  SWAP
  DROP

  AND AND AND
;

: ARETOWERSCOMPLETE ( -- bool )
  TOWER1 ISTOWERCOMPLETE
  TOWER2 ISTOWERCOMPLETE AND
  TOWER3 ISTOWERCOMPLETE AND
;
