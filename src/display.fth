HEX
8800 CONSTANT VDPRD
8802 CONSTANT VDPSTS
8C00 CONSTANT VDPWD
8C02 CONSTANT VDPWA

4000 CONSTANT WRITEMASK
0100 CONSTANT SHIFTRIGHTONEBYTE
E0   CONSTANT GRAPHICSMODE

4                      CONSTANT SCREENIMAGETABLE
SCREENIMAGETABLE 400 * CONSTANT SCREENIMAGEADDRESS
DECIMAL

\ TODO: Need to set LIMI 0 & LIMI 2 before calling this
: SETVDPWRITEADDRESS ( Vaddr -- )
  WRITEMASK OR
  DUP SHIFTRIGHTONEBYTE / VDPWA !
  VDPWA !
;

: TOWERLABELS$ ( -- addr len )
  S" TOWER 1     TOWER 2     TOWER 3"
;

: GETTOWERCHAR ( toweraddr index -- )
  + C@ CASE
    32 OF 32 ENDOF       \ empty
    82 OF 128 ENDOF      \ red
    71 OF 136 ENDOF      \ green
    66 OF 144 ENDOF      \ blue
    32
  ENDCASE
;

: DISPLAYBOARD ( -- )
  5 0 DO
    4 I - TOWER1 GETTOWERCHAR
    I 32 * 3 + SCREENIMAGEADDRESS + VC!
    4 I - TOWER2 GETTOWERCHAR
    I 32 * 15 + SCREENIMAGEADDRESS + VC!
    4 I - TOWER3 GETTOWERCHAR
    I 32 * 27 + SCREENIMAGEADDRESS + VC!
  LOOP
  
  TOWERLABELS$ SCREENIMAGEADDRESS 160 + SWAP VWRITE
;

: INSTRUCTIONS$ ( -- addr len )
  S" TYPE TWO TOWER NUMBERS TO MOVE A BLOCK TO AND FROM"
;

: FROM$ ( -- addr len )
  S" FROM"
;

: TO$ ( -- addr len )
  S" TO"
;

: ERRORRANGE$ ( -- addr len )
  S" MUST BE A NUMBER IN RANGE 1 TO 3"
;

: ERRORMOVE$ ( -- addr len )
  S" CAN'T MOVE BETWEEN THOSE TOWERS RIGHT NOW"
;

: ACCEPTINPUT ( -- fromTower toTower )
  TOWERLABELS$ SCREENIMAGEADDRESS 256 + SWAP VWRITE
  FROM$ SCREENIMAGEADDRESS 290 + SWAP VWRITE
  TO$ SCREENIMAGEADDRESS 322 + SWAP VWRITE
;

\
\ Display the board when FORTH is in interactive mode
\
: TESTDISPLAY ( -- )
  16 7 7 COLOR
  17 13 13 COLOR
  18 5 5 COLOR
  GRAPHICSMODE 1 VWTR
  SCREENIMAGETABLE 2 VWTR

  DISPLAYBOARD

  KEY DROP
  0 2 VWTR
;

: TESTINPUT ( -- )
  16 7 7 COLOR
  17 13 13 COLOR
  18 5 5 COLOR
  GRAPHICSMODE 1 VWTR
  SCREENIMAGETABLE 2 VWTR

  ACCEPTINPUT

  KEY DROP
  0 2 VWTR
;